
package com.sptech.projetoindividual;

import javax.xml.transform.Source;

public class Metodos {
    // Opção 1: Gasto com ração/dia
    Double calcularGastoRacao(Integer dias){
        Double gastoTotal = 1.5 * dias;
        return gastoTotal;
    }
    // Opção 2: Comparar quantidade de gatos
    void compararGatos(Integer quantidadeGatos){
        Integer meusGatos = 3;
        Integer diferencaGatos = quantidadeGatos - meusGatos;
        
        if (diferencaGatos == 0){
            System.out.println("\nEmpatamos, 3 é um ótimo número!");
        } else if (diferencaGatos > 0) {
                System.out.println(String.format(
                        "\nNossa, você tem %d gatos a mais que eu, "
                        + "isso deve ser tão divertido!",
                        diferencaGatos));
        } else {
                System.out.println(String.format(
                        "\nGanhei, tenho %d a mais que você, "
                        + "pelo menos você gasta menos com ração",
                        (meusGatos - quantidadeGatos)));
        }         
    }
    // Opção 3: Exibir ASCII art
    void exibirGato(){
        System.out.println(
"                             ... ..*/////*////((((((((###%#%%%%%#((/&*/*,.... .,\n" +
"                          ...,.###((///(///*/****//((/(((##########.*,,,...,,,.,\n" +
".       .. .. .       ...,**/#%##///*///(///,,.(///****///////////,(#(##(*...,..\n" +
"..     .......      ...,***/#%#(/****/((((*,,.*****,,,,,,*******,./(%/,*#%#/,.,,\n" +
" ,   ..........      ...,,*#%#(//*,,*//((,... **,,,,,,,,##/**,,,.**(,,((,##/*...\n" +
".    . ........      .....,#(/*,,..,*//(,... **,,.,.,//..%#(**.,..,. ..,*//*.,..\n" +
".,.     ......        ....,/,,,,,.,,*//,... .,,.....,((%%(/***,. ...../*,*,,,  .\n" +
"..,,     ..,..          ...,,,....,,,*,...  ,.......,*//****,,,**.  ,////..  ..,\n" +
".   ,.    .,,.            ..*.,......... ......./**///,.,*/*,,**,,,      ...,,.,\n" +
"           ,..             ..,...,.,...   ...//**//(#(/,,,*.,,..,..,.  ..**,,,,.\n" +
"            .                .,,,,,,... ...,%(*/(#####*... . .....     .,,,,,,,,\n" +
"                              .*,,,,,,...((/*((#(#%%#(,.., ,,...  ..   .,,,,,,,,\n" +
"                                **,***,*%(/*/((%%#%#(/.,, ....     .. ..,,,,,,.,\n" +
"                                ,##%#####%%%%%(##%#(*... ....    ....  .*,*,,,..\n" +
"              .         ... .*%%%%%#((((((((((###(*/...   ..     ...   *,*,,,,..\n" +
" .           ..   ,.    ..,%&&&%%%#######(//#(//(***,,,..       .,.   ,,,,,,,,..\n" +
"     .    ..    .,,,*((#%@&@@@@%(/#/**,*(/#%(/////**,,,....    ...  .,,,,,,.....\n" +
"          .,,..*//(%@@@@@@@&&@&(/*#,*#,,*%%**(##///*,.,......... ....,,,,,..    \n" +
"           ../%&&@@@@@@@@@@@@@&#%(%#,*//%&&%%#(,(/**,,,,,,......,,,...... .     \n" +
" .  .    .,/%%&@@@@@@@@@@@@@@@@@@@@&%(&@@@@@&%(/(%&/**,.,,,*,..,,......         \n" +
". ..    ..*/#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%&&&%(/**,,,,.,,,,//(#*.            \n" +
"       ..,*(#&@@@@@@@&%&@@@@@@@@@@@@@@&&%%%%%%%#((*.,,**/**/*/(/((####((((//    \n" +
"..    .,,**(%&@@@@@&%###&@@@@@@@&@%%%%%%%%%%##(((/(((/*,,*/****/((/((((#////,,  \n" +
"**,..,,*(#(/#&&@@&&%##%&%@@&&&&#%%%%%%%%%%**.,,,..,*******///****//*******,,.   \n" +
"//*,*/#%&&&%(#&@@&%%#%%%&@@&#(%%%%%%%%%%%%%#(.,.*/(.,/****(/*,*/**///,          \n" +
"(//**(%&&&%%%*#&&&%%%%%%&%%&%#%%%%%%%%%%%%##**,*****//******/*,.                \n" +
"(/*(%&&&&&&%#*(%&&&&&&&%%#%%%#(%%%%%%%&%%%%#(/****//****/,.,,,.......           \n" +
"/*(%&&&@&%%#/*,/#&&&&&&&%%%%%%%%%%%%%%%&%%%%%%%%%(/*///**,,,,*,*,,**,.. . .     \n" +
",*%&&&&&%%%/***(##%&&&&&&&&&%%%%%%%%%%%%%%%%%%##//,,,*****,***/***,,,,.. ,*,... \n" +
"*(&&@&&&%%(***/%&&%#/((%%&&&&&&&%%%%%%%%%%%%/,,.,,**//********//*,,,,,**/* ...,,\n" +
"/#&&&&%%%%(/*(%&&&&%#(/*,,/((#%%%%%%%%%%#//*,*,,,*////*******//,,,,,**//*,,**/*/\n" +
"%&&&&&&%%#(//&@@&&%%(/**,*/(((###%%%%%#(//,,*,,,*////******/**,..,,***,,,,****//");
    
    }
    // Opção 5
    // Desenho por quantidade de erros
    void exibirErro(Integer quantidadeErros){
        switch (quantidadeErros) {
            case 0:
                System.out.println(
                        "      _______\n"
                        + "      |     |\n"
                        + "      |    \n"
                        + "      |\n"
                        + "      |\n"
                        + "      |\n"
                        + "______|______");
                break;
            case 1:
                System.out.println(
                        "      _______\n"
                        + "      |     |\n"
                        + "      |    ( )\n"
                        + "      |\n"
                        + "      |\n"
                        + "      |\n"
                        + "______|______");
                break;                
            case 2:
                System.out.println(
                        "      _______\n"
                        + "      |     |\n"
                        + "      |    ( )\n"
                        + "      |     |\n"
                        + "      |     |\n"
                        + "      |\n"
                        + "______|______");
                break;

            case 3:
                System.out.println(
                        "       _______\n"
                        + "      |     |\n"
                        + "      |    ( )\n"
                        + "      |     |\n"
                        + "      |     |\n"
                        + "      |    / \\\n"
                        + "______|______");
                break;
            case 4:
                System.out.println(
                        "      _______\n"
                        + "      |     |\n"
                        + "      |    ( )\n"
                        + "      |    /|\\\n"
                        + "      |     |\n"
                        + "      |    / \\\n"
                        + "______|______");
                break;
            case 5:
                System.out.println(
                        "      _______\n"
                        + "      |     |\n"
                        + "      |    (X)\n"
                        + "      |    /|\\\n"
                        + "      |     |\n"
                        + "      |    / \\\n"
                        + "______|______");
                break;
        }
    }
    // Definir fase
    String definirFase(Integer fase){
        String quantidadeLetras = "";
        switch (fase) {
            case 1:
                quantidadeLetras = "6 letras";
                break;
            case 2:
                quantidadeLetras = "8 letras";
                break;
            case 3:
                quantidadeLetras = "8 letras";
                break;                
        }
        return quantidadeLetras;
    }
}
